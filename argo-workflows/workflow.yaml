apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: mlflow-workflow-
spec:
  entrypoint: main
  templates:
    - name: main
      dag:
        tasks:
          - name : initialize
            template: mlflow-initialize

          - name: preprocess
            template: mlflow
            arguments:
              parameters:
                - name: entry_point
                  value: preprocess
                - name: run_id
                  value: "{{tasks.initialize.outputs.result}}"
            dependencies: [initialize]

          - name: train
            template: mlflow
            arguments:
              parameters:
                - name: entry_point
                  value: train
                - name: run_id
                  value: "{{tasks.initialize.outputs.result}}"
            dependencies: [preprocess]

          - name: evaluate
            template: mlflow
            arguments:
              parameters:
                - name: entry_point
                  value: evaluate
                - name: run_id
                  value: "{{tasks.initialize.outputs.result}}"
            dependencies: [train]

          - name: build-image
            template: mlflow-build
            arguments:
              parameters:
                - name: entry_point
                  value: build-image
                - name: run_id
                  value: "{{tasks.initialize.outputs.result}}"
            dependencies: [evaluate]

    - name: mlflow-initialize
      container:
        image: marcy326/mlflow-conda:py3.11
        imagePullPolicy: Always
        command: ["conda", "run", "--no-capture-output", "-n", "mlflow-env", 
                  "mlflow", "run", "https://github.com/marcy326/mlflow-argo.git"]
        args: ["--entry-point", "initialize", "--env-manager", "local"]
        env:
          - name: MLFLOW_TRACKING_URI
            value: "http://mlflow.mlflow:5000"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"

    - name: mlflow-build
      inputs:
        parameters:
          - name: entry_point
          - name: run_id
      container:
        image: marcy326/mlflow-conda:docker
        imagePullPolicy: Always
        command: ["/bin/sh", "-c"]
        args: [
          "dockerd-entrypoint.sh & sleep 20 && conda run --no-capture-output -n mlflow-env mlflow run https://github.com/marcy326/mlflow-argo.git --entry-point {{inputs.parameters.entry_point}} --run-id {{inputs.parameters.run_id}} --env-manager local"
        ]
        env:
          - name: MLFLOW_TRACKING_URI
            value: "http://mlflow.mlflow:5000"
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: MINIO_ACCESS_KEY
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: MINIO_SECRET_KEY
          - name: MLFLOW_S3_ENDPOINT_URL
            value: "http://minio.mlflow.svc.cluster.local:9000"
          - name: DOCKER_USERNAME
            valueFrom:
              secretKeyRef:
                name: docker-secret
                key: username
          - name: DOCKER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: docker-secret
                key: password
          - name: DOCKER_HOST
            value: "tcp://localhost:2375"
        volumeMounts:
          - name: docker-graph-storage
            mountPath: /var/lib/docker
      sidecars:
        - name: dind
          image: docker:20.10.7-dind
          securityContext:
            privileged: true
          env:
            - name: DOCKER_TLS_CERTDIR
              value: ""
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker

    - name: mlflow
      inputs:
        parameters:
          - name: entry_point
          - name: run_id
      container:
        image: marcy326/mlflow-conda:py3.11
        imagePullPolicy: Always
        command: ["conda", "run", "--no-capture-output", "-n", "mlflow-env", 
                  "mlflow", "run", "https://github.com/marcy326/mlflow-argo.git"]
        args: ["--entry-point", "{{inputs.parameters.entry_point}}", "--run-id", "{{inputs.parameters.run_id}}", "--env-manager", "local"]
        env:
          - name: MLFLOW_TRACKING_URI
            value: "http://mlflow.mlflow:5000"
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: MINIO_ACCESS_KEY
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: MINIO_SECRET_KEY
          - name: MLFLOW_S3_ENDPOINT_URL
            value: "http://minio.mlflow.svc.cluster.local:9000"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"

  volumes:
    - name: docker-graph-storage
      emptyDir: {}
