apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: mlflow-workflow-
spec:
  entrypoint: main
  templates:
    - name: main
      dag:
        tasks:
          - name: preprocess
            template: mlflow-preprocess

          - name: train
            template: mlflow
            arguments:
              parameters:
                - name: entry_point
                  value: train
                - name: run_id
                  value: "{{tasks.preprocess.outputs.result}}"
            dependencies: [preprocess]

          - name: evaluate
            template: mlflow
            arguments:
              parameters:
                - name: entry_point
                  value: evaluate
                - name: run_id
                  value: "{{tasks.preprocess.outputs.result}}"
            dependencies: [train]

          - name: deploy
            template: mlflow
            arguments:
              parameters:
                - name: entry_point
                  value: deploy
                - name: run_id
                  value: "{{tasks.preprocess.outputs.result}}"
            dependencies: [evaluate]

    - name: mlflow-preprocess
      container:
        image: marcy326/mlflow-conda:py3.11
        imagePullPolicy: Always
        command: ["conda", "run", "--no-capture-output", "-n", "mlflow-env", 
                  "mlflow", "run", "https://github.com/marcy326/mlflow-argo.git"]
        args: ["--entry-point", "preprocess", "--env-manager", "local"]
        env:
          - name: MLFLOW_TRACKING_URI
            value: "http://mlflow.mlflow:5000"
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: AWS_SECRET_ACCESS_KEY
          - name: MLFLOW_S3_ENDPOINT_URL
            value: "http://minio.minio.svc.cluster.local:9000"
        volumeMounts:
          - name: mlflow-project
            mountPath: /mnt/mlflow-project
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
    
    - name: mlflow
      inputs:
        parameters:
          - name: entry_point
          - name: run_id
      container:
        image: marcy326/mlflow-conda:py3.11
        imagePullPolicy: Always
        command: ["conda", "run", "--no-capture-output", "-n", "mlflow-env", 
                  "mlflow", "run", "https://github.com/marcy326/mlflow-argo.git"]
        args: ["--entry-point", "{{inputs.parameters.entry_point}}", "--run-id", "{{inputs.parameters.run_id}}", "--env-manager", "local"]
        env:
          - name: MLFLOW_TRACKING_URI
            value: "http://mlflow.mlflow:5000"
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: AWS_SECRET_ACCESS_KEY
          - name: MLFLOW_S3_ENDPOINT_URL
            value: "http://minio.minio.svc.cluster.local:9000"
        volumeMounts:
          - name: mlflow-project
            mountPath: /mnt/mlflow-project
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"

  volumes:
    - name: mlflow-project
      persistentVolumeClaim:
        claimName: mlflow-project-pvc
