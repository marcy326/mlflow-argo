# Docker-in-Docker をベースイメージとして使用
FROM docker:latest

# 必要なパッケージをインストール
RUN apk add --no-cache \
    bash \
    wget \
    bzip2 \
    ca-certificates \
    gcc \
    g++ \
    musl-dev \
    linux-headers \
    cmake \
    make \
    patchelf

# glibcをインストール
RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \
    wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.34-r0/glibc-2.34-r0.apk && \
    apk add --force-overwrite glibc-2.34-r0.apk && \
    rm glibc-2.34-r0.apk

# Minicondaをダウンロードしてインストール
ENV CONDA_DIR /opt/conda
ENV PATH $CONDA_DIR/bin:$PATH
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
    chmod +x /tmp/miniconda.sh && \
    /bin/bash /tmp/miniconda.sh -b -p $CONDA_DIR && \
    rm /tmp/miniconda.sh && \
    conda clean -t -i -p -y

# 仮想環境を作成し、conda_env.yamlをインストール
WORKDIR /mlflow-project
COPY conda_env.yaml .
RUN conda env create -f conda_env.yaml

# Conda環境を自動的にアクティブにするスクリプト
RUN echo "conda activate mlflow-env" >> ~/.bashrc

# エントリーポイントスクリプトをコピー
COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["bash"]